# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yPRcBqiEm3lQ9G6bQUgwW1xnBJzw44aV
"""

# app.py
import streamlit as st
from PIL import Image, ImageDraw, ImageFont
import torch
from torchvision import transforms
from facenet_pytorch import MTCNN
import numpy as np
from model import FERModel  # modelo definido aparte

# Config
device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
model = FERModel()
model.load_state_dict(torch.load("modelo_entrenado.pth", map_location=device))
model.eval().to(device)

# Emociones
class_names = ['Angry', 'Disgust', 'Fear', 'Happy', 'Sad', 'Surprise', 'Neutral']

# Detector de caras
mtcnn = MTCNN(keep_all=True, device=device, post_process=True)

# Transformaciones
transform = transforms.Compose([
    transforms.Grayscale(num_output_channels=1),
    transforms.Resize((48, 48)),
    transforms.ToTensor()
])

# Streamlit UI
st.title("Detector de emociones faciales ðŸ˜„ðŸ˜ ðŸ˜¢")
uploaded_file = st.file_uploader("SubÃ­ una foto grupal", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    image = Image.open(uploaded_file).convert("RGB")
    st.image(image, caption="Imagen original", use_column_width=True)

    boxes, _ = mtcnn.detect(image)

    if boxes is None:
        st.warning("No se detectaron caras.")
    else:
        draw = ImageDraw.Draw(image)

    try:
        font = ImageFont.truetype("Roboto-Regular.ttf", size=40)
    except:
        font = ImageFont.load_default()


        for box in boxes:
            face = image.crop(box).convert("L").resize((48, 48))
            input_tensor = transform(face).unsqueeze(0).to(device)
            with torch.no_grad():
                output = model(input_tensor)
                pred = torch.argmax(output, dim=1).item()
                emotion = class_names[pred]

            draw.rectangle(box.tolist(), outline="red", width=5)
            draw.text((box[0], box[1] - 10), emotion, fill="red", font=font)


        st.image(image, caption="Emociones detectadas", use_column_width=True)
